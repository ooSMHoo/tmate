<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">

	<select id="reviewMain" parameterType="map" resultType="com.sp.trip.review.Review">
		SELECT r.roomNum
		FROM member1 m
		JOIN reservation rv ON rv.memberId = m.memberId
		JOIN reservationDetail rd ON rv.resNum = rd.resNum
		JOIN room r ON rd.roomNum = r.roomNum
		JOIN lodging l ON l.mhId = r.mhId
		LEFT JOIN review review ON review.resNum = rv.resNum
		WHERE resCout_date &gt; SYSDATE AND resCode=0 AND m.memberId= #{memberId} AND revNum IS NULL
		ORDER BY rv.resCout_date DESC
	</select>
	
	<select id="listReview" parameterType="map" resultType="com.sp.trip.review.Review">
		SELECT * FROM (
		      	 SELECT ROWNUM rnum, tb.* FROM (
		            SELECT r.roomNum, r.roomName, lodgName, TO_CHAR(resCout_date, 'YYYY.MM.DD')resCout_date ,revNum, rd.resNum, 
		            		l.mhId, lPhotoName, ROW_NUMBER() OVER(PARTITION BY r.roomNum ORDER BY lp.lPhotoName ASC) AS rn 
		            FROM member1 m
					JOIN reservation rv ON rv.memberId = m.memberId
					JOIN reservationDetail rd ON rv.resNum = rd.resNum
					JOIN room r ON rd.roomNum = r.roomNum
					JOIN lodging l ON l.mhId = r.mhId
					JOIN lodgingPhoto lp ON l.mhId = lp.mhId
				LEFT JOIN review review ON review.resNum = rv.resNum
				WHERE resCout_date &lt; SYSDATE AND resCode=0 AND m.memberId= #{memberId}
				<choose>
					<when test="revNum.equals('true')">
						AND revNum IS NULL
					</when>
					<otherwise>
						AND revNum IS NOT NULL
					</otherwise>
				</choose>
				ORDER BY rv.resCout_date DESC				 
	        ) tb WHERE ROWNUM &lt;= #{end} AND rn=1
	    ) WHERE rnum &gt;= #{start}
	</select>	
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM member1 m
		JOIN reservation rv ON rv.memberId = m.memberId
		JOIN reservationDetail rd ON rv.resNum = rd.resNum
		JOIN room r ON rd.roomNum = r.roomNum
		JOIN lodging l ON l.mhId = r.mhId
		LEFT JOIN review review ON review.resNum = rv.resNum
		WHERE resCout_date &lt; SYSDATE AND resCode=0 AND m.memberId= #{memberId}
        <choose>
			<when test="revNum.equals('true')">
				AND revNum IS NULL
			</when>
			<otherwise>
				AND revNum IS NOT NULL
			</otherwise>
		</choose>
	</select>
	
	<insert id="insertReview" parameterType="com.sp.trip.review.Review">
		INSERT INTO review(revNum, memberId, resNum, revSubject, revContent, revGrade, revReg_date, resAnswer)
		VALUES (review_seq.NEXTVAL, #{memberId}, #{resNum}, #{revSubject}, #{revContent}, #{revGrade}, SYSDATE, #{resAnswer, jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertPoint" parameterType="String">
		INSERT INTO point(pointNum, pointCode, pointDate, pointQuant, memberId)
		VALUES (point_seq.NEXTVAL, 0, SYSDATE, 1000, #{memberId})
	</insert>
	
	<insert id="insertReport" parameterType="map">
		INSERT INTO hostReport(memberId, mhId, hrSubject, hrContent, hrCode)
		VALUES (#{memberId}, #{mhId}, #{hrSubject}, #{hrContent}, 0)
	</insert>
</mapper>